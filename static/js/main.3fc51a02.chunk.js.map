{"version":3,"sources":["api/mockData.js","components/Header/HeaderElements.js","components/Header/index.js","components/Users/UsersCard/UsersCardElements.js","components/Users/UsersCard/index.js","components/Users/UsersList/UsersListElements.js","redux/actions/actionTypes.js","api/apiUtils.js","redux/actions/userActions.js","api/userApi.js","components/commons/UserDetails.js","components/commons/index.js","components/Users/UsersList/index.js","components/Users/UsersProfile/UsersProfileElements.js","components/Users/UsersChat/USersChatElements.js","redux/actions/sessionActions.js","components/Users/UsersChat/index.js","redux/actions/chatActions.js","components/Users/UsersProfile/index.js","components/Login/LoginElements.js","components/Login/index.js","redux/reducers/index.js","redux/reducers/userReducer.js","redux/reducers/sessionReducer.js","redux/reducers/chatReducer.js","App.js","redux/configureStore.js","index.js"],"names":["module","exports","newUsers","HeaderContainer","styleC","div","HeaderLogo","logoPrimaryColor","CustomColor","span","logoSecondaryColor","Header","UsersListCard","bgColor","CardSendMessageLink","Link","CardImgContainer","Img","img","CardContentContainer","CardUserName","h2","titleColor","CardFooter","textColor","CardDiv","CardIcon","CardContent","UsersCard","users","userSession","JSON","parse","localStorage","getItem","map","user","id","to","Provider","value","style","color","display","src","alt","name","email","phone","UsersContainer","UsersError","UsersSearchContainer","UsersFormTitle","h1","inputBoxColor","UsersButton","button","UsersFormInput","input","UsersListContainer","UserDiv","LOAD_USERS_SUCCESS","LOAD_FILTERED_USERS_SUCCESS","SAVE_SESSION","SAVE_CHATS","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","loadUsers","dispatch","fetch","then","catch","type","types","loadUsersSuccess","err","HeaderUserContainer","HeaderOptions","HeaderUserName","HeaderUser","UserDetails","useState","redirectMe","setRedirectMe","useEffect","length","onClick","log","removeItem","mapDispatchToProps","filterUsers","searchValue","connect","sessions","setSearchValue","alert","autocomplete","placeholder","onChange","e","target","handleInput","UsersProfileContainer","UsersProfileCard","UsersProfileVector","UsersProfileImg","UsersCloseIcon","UsersProfileName","UsersProfileSendMessage","UsersProfileWrapper","UsersProfileInfo","UsersProfileDiv","UsersProfileIcon","UsersProfileContent","UsersChatWrapper","UsersChatContainer","UsersConversationDiv","UsersSenderDiv","UsersAvatar","margin","UsersMessage","UsersChatForm","form","UsersChatSendButton","UsersChatInput","saveSession","createChats","chats","state","ownProps","paramsId","match","params","find","parseInt","getUsersParams","props","setUser","messages","teamMateId","chat","setChat","chatSession","Object","values","forEach","newValue","setItem","stringify","keys","onSubmit","preventDefault","reset","onChatSave","autoComplete","prevChats","handleChange","username","address","street","suite","city","zipcode","company","ModalContainer","ModalContent","ModalTitle","ModalInput","ModalButton","ModalError","options","optionsState","setUserSession","showError","setShowError","handleSession","filterSession","filter","filterUsername","toLowerCase","includes","handleSubmit","rootReducer","combineReducers","action","filteredState","item","some","key","toString","store","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","App","exact","component","path","LoginPage","UsersList","UsersProfile","UsersChat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fc51a02.chunk.js","sourcesContent":["const newUsers = {\r\n    \r\n        \"id\": null,\r\n        \"name\": \"\",\r\n        \"username\": \"\",\r\n        \"email\": \"\",\r\n        \"address\": {\r\n        \"street\": \"\",\r\n        \"suite\": \"\",\r\n        \"city\": \"\",\r\n        \"zipcode\": \"\",\r\n        \"geo\": {\r\n        \"lat\": \"\",\r\n        \"lng\": \"\"\r\n        }\r\n        },\r\n        \"phone\": \"\",\r\n        \"website\": \"\",\r\n        \"company\": {\r\n        \"name\": \"\",\r\n        \"catchPhrase\": \"\",\r\n        \"bs\": \"\"\r\n        }\r\n  };\r\n  \r\n  // Using CommonJS style export so we can consume via Node (without using Babel-node)\r\n  module.exports = {\r\n    newUsers\r\n  };","import styleC from 'styled-components';\r\n\r\nexport const HeaderContainer = styleC.div\r\n`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    height: 85px;\r\n    position: relative;\r\n`\r\nexport const HeaderLogo = styleC.div\r\n`\r\n    font-size: 6rem;\r\n    font-family: 'Do Hyeon', sans-serif;\r\n    font-weight: 600;\r\n    // color: ${({logoPrimaryColor}) => logoPrimaryColor};\r\n    color: #1B161C;\r\n`\r\n\r\nexport const CustomColor = styleC.span\r\n`\r\n    // color: ${({logoSecondaryColor}) => logoSecondaryColor};\r\n    color: #F56032;\r\n`\r\n\r\n","import React from 'react';\r\nimport {\r\n    HeaderContainer,\r\n    HeaderLogo,\r\n    CustomColor\r\n} from './HeaderElements';\r\n\r\nconst Header = () => {\r\n \r\n    return (\r\n           \r\n            <HeaderContainer>\r\n                <HeaderLogo >\r\n                    <CustomColor>We</CustomColor>Connect\r\n                </HeaderLogo>\r\n            </HeaderContainer>\r\n    )\r\n}\r\n\r\nexport default (Header);\r\n","import styleC from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const UsersListCard = styleC.div\r\n`\r\n    padding: 2rem;\r\n    position: relative;\r\n    height: 160px;\r\n    width: 400px;\r\n    // background: ${({bgColor}) => bgColor};\r\n    background: #FFB174;\r\n    border-radius: 1.5rem;\r\n    margin: 2rem;\r\n`\r\n\r\nexport const CardSendMessageLink = styleC(Link)\r\n`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    margin-right: 1rem;\r\n    margin-top: 1rem;\r\n    font-size: 3rem;\r\n    outline: none;\r\n    border:none;\r\n    background: transparent;\r\n    cursor:pointer;\r\n    z-index: 10;\r\n\r\n    \r\n`\r\n\r\nexport const CardImgContainer = styleC(Link)\r\n`\r\n    width: 30%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    margin-left: -2rem;\r\n    margin-bottom: -3rem;\r\n`\r\nexport const Img = styleC.img\r\n`\r\n    width: 100%;\r\n`\r\n\r\nexport const CardContentContainer = styleC.div\r\n`\r\n    width: 75%;\r\n    height: 50%;\r\n    position: absolute;\r\n    right: 0;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const CardUserName = styleC.h2\r\n`\r\n    font-size: 3.5rem;\r\n    font-weight: 900;\r\n    line-height: 0.9;\r\n    opacity: 0.8;\r\n    // color: ${({titleColor}) => titleColor}\r\n    color: #FFF4E3;\r\n    width: 60%;\r\n\r\n    @media screen and (max-width: 411px){\r\n        font-size: 3rem;\r\n    }\r\n\r\n    @media screen and (max-width: 360px){\r\n        font-size: 2.8rem;\r\n    }\r\n\r\n    @media screen and (max-width: 320px){\r\n        font-size: 2.4rem;\r\n    }\r\n`\r\nexport const CardFooter = styleC.div\r\n`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    // color: ${({textColor}) => textColor};\r\n    color: #5D5D5A;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    bottom:0;\r\n    right: 0;\r\n    margin: 1rem;\r\n    width: 70%;\r\n`\r\nexport const CardDiv = styleC.div\r\n`\r\n    display: flex;\r\n    margin-right: 1rem;\r\n    margin-bottom: 0.3rem;\r\n    \r\n`\r\nexport const CardIcon = styleC.div\r\n`\r\n    font-size: 1.2rem;\r\n    margin-right: 0.3rem;\r\n`\r\nexport const CardContent = styleC.div\r\n`\r\n    font-size: 1.2rem;\r\n\r\n    @media screen and (max-width: 320px){\r\n        font-size: 1rem;\r\n    }\r\n`","import React from 'react'\r\nimport {IconContext} from 'react-icons';\r\nimport {BiMessageAdd} from 'react-icons/bi';\r\nimport {MdEmail, MdPhoneIphone} from 'react-icons/md';\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n        UsersListCard,\r\n        CardSendMessageLink,\r\n        CardImgContainer,\r\n        Img,\r\n        CardContentContainer,\r\n        CardUserName,\r\n        CardFooter,\r\n        CardDiv,\r\n        CardIcon,\r\n        CardContent\r\n} from './UsersCardElements'\r\n\r\nconst UsersCard = ({ users }) => {\r\n    const userSession = JSON.parse(localStorage.getItem(\"sessionUser\")) ? JSON.parse(localStorage.getItem(\"sessionUser\")) : [];\r\n\r\n        return (\r\n            <>\r\n            {users.map((user) => (   \r\n                userSession[0][\"id\"] !== user.id &&\r\n                <UsersListCard key={user.id}>\r\n                    <CardSendMessageLink to={\"/chat/\" + user.id}>\r\n                        <IconContext.Provider value={{ style: {color: \"#FFF4E3\", display: \"flex\"} }}>\r\n                            <BiMessageAdd/>\r\n                        </IconContext.Provider>\r\n                    </CardSendMessageLink>\r\n                    <CardImgContainer to={\"/profile/\" + user.id}>\r\n                        <Img src={`/images/pic-${user.id}.png`} alt=\"User1\"/>\r\n                    </CardImgContainer>\r\n                    <CardContentContainer>\r\n                        <CardUserName>{user.name}</CardUserName>\r\n                    </CardContentContainer>\r\n                    <CardFooter>\r\n                            <IconContext.Provider value={{ style: {color: \"#5D5D5A\", display: \"flex\"} }}>\r\n                                <CardDiv>\r\n                                    <CardIcon><MdEmail/></CardIcon>\r\n                                    <CardContent>{user.email}</CardContent>\r\n                                </CardDiv>\r\n                                <CardDiv>\r\n                                    <CardIcon><MdPhoneIphone/></CardIcon>\r\n                                    <CardContent>{user.phone}</CardContent>\r\n                                </CardDiv>\r\n                            </IconContext.Provider>\r\n                        </CardFooter>\r\n                </UsersListCard>\r\n            ))}\r\n            </>\r\n        );\r\n}\r\n\r\nUsersCard.propTypes = {\r\n    users: PropTypes.array.isRequired\r\n}\r\n\r\nexport default UsersCard\r\n","import styleC from 'styled-components';\r\n\r\nexport const UsersContainer = styleC.div\r\n`\r\n    justify-content: center;\r\n    height: auto;\r\n    margin: 2rem auto;\r\n    z-index: 90;\r\n`\r\n\r\nexport const UsersError = styleC.div\r\n`\r\n    color : #FF0013;\r\n    opacity: 0.8;\r\n    font-size: 3.6rem;\r\n    height: 50vh;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const UsersSearchContainer = styleC.div\r\n`\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n    padding: 1.6rem;\r\n    \r\n    @media screen and (max-width: 520px){\r\n        flex-direction: column;\r\n    }\r\n    z-index: 98;\r\n`\r\n\r\nexport const UsersFormTitle = styleC.h1\r\n`\r\n    font-size: 3.6rem;\r\n    // color: ${({inputBoxColor}) => inputBoxColor};\r\n    color: #FC724C;\r\n    margin-right: 2rem;\r\n    \r\n\r\n    @media screen and (max-width: 411px){\r\n        font-size: 2.4rem;\r\n        margin-bottom: 1rem;\r\n    }\r\n`\r\n\r\nexport const UsersButton = styleC.button\r\n`\r\n    // color: ${({inputBoxColor}) => inputBoxColor};\r\n    color: #FC724C;\r\n    outline: none;\r\n    background: transparent;\r\n    white-space: nowrap;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease-inout;\r\n    font-size: 4rem;\r\n    margin-left: 0;\r\n    opacity: 0.7;\r\n    transform: rotate(180deg) scale(0.5);\r\n    transition: all 0.2s ease-in-out;\r\n    z-index: 1;\r\n\r\n   \r\n`\r\n\r\nexport const UsersFormInput = styleC.input\r\n`\r\n    // border: solid ${({inputBoxColor}) => inputBoxColor} 1px;\r\n    border: solid #FC724C 1px;\r\n    padding: 2rem;\r\n    border-radius: 3rem;\r\n    // color: ${({inputBoxColor}) => inputBoxColor};\r\n    color: #FC724C;\r\n    outline: none;\r\n    z-index: 1;\r\n    \r\n    ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n        // color: ${({inputBoxColor}) => inputBoxColor};\r\n        color: #FC724C;\r\n        opacity: 0.5; /* Firefox */\r\n    }\r\n    \r\n    :-ms-input-placeholder { /* Internet Explorer 10-11 */\r\n        // color: ${({inputBoxColor}) => inputBoxColor};\r\n        color: #FC724C;\r\n    }\r\n    \r\n    ::-ms-input-placeholder { /* Microsoft Edge */\r\n        // color: ${({inputBoxColor}) => inputBoxColor};\r\n        color: #FC724C;\r\n    }\r\n\r\n    &:focus + ${UsersButton} {\r\n            transform: scale(1.2);\r\n            opacity: 1;\r\n            margin-left: 1rem;\r\n            }\r\n        \r\n\r\n`\r\n\r\nexport const UsersListContainer = styleC.div\r\n`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: 2rem;\r\n    justify-content: flex-start;\r\n    transition: all 0.2 ease-in-out;\r\n    \r\n    \r\n    @media screen and (max-width: 1815px){\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nexport const UserDiv = styleC.div\r\n`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n`","export const LOAD_USERS_SUCCESS = \"LOAD_USERS_SUCCESS\"\r\nexport const LOAD_FILTERED_USERS_SUCCESS = \"LOAD_FILTERED_USERS_SUCCESS\"\r\nexport const SAVE_SESSION = \"SAVE_SESSION\"\r\nexport const SAVE_CHATS = \"SAVE_CHATS\"","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    \n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import * as types from './actionTypes';\r\nimport {getUsers} from '../../api/userApi';\r\n\r\nexport function loadUsersSuccess(users){\r\n    return { type: types.LOAD_USERS_SUCCESS, users};\r\n}\r\n\r\nexport function filterUsers(searchValue){\r\n    return function(dispatch) {\r\n        dispatch({\r\n            type: types.LOAD_FILTERED_USERS_SUCCESS,\r\n            searchValue\r\n        })\r\n    }\r\n   \r\n}\r\n\r\nexport function loadUsers(){\r\n    return function (dispatch) {\r\n        return getUsers().then(users => {\r\n            dispatch(loadUsersSuccess(users));\r\n        }).catch(err => {\r\n            throw err;\r\n        })\r\n    }\r\n}\r\n\r\n","import {handleResponse, handleError} from './apiUtils';\r\nconst apiUrl = 'https://jsonplaceholder.typicode.com/users';\r\n\r\n\r\nexport function getUsers() {\r\n    return fetch(apiUrl)\r\n      .then(handleResponse)\r\n      .catch(handleError);\r\n  }","import styleC from 'styled-components';\r\n\r\nexport const HeaderUserContainer = styleC.div\r\n`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-bottom: 5rem;\r\n\r\n    @media screen and (max-width: 411px){\r\n        margin-bottom: 3rem;\r\n    }\r\n`\r\n\r\nexport const HeaderOptions = styleC.div\r\n`\r\n    \r\n    padding: 1rem;\r\n    border: solid 1px #FC724C;\r\n    transition: all 0.2s ease-in-out;\r\n    text-align: center;\r\n    margin-top: 1rem;\r\n   \r\n`\r\n\r\nexport const HeaderUserName = styleC.div\r\n`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\n\r\nexport const HeaderUser = styleC.div\r\n`\r\n    color: #F56032;\r\n    font-weight: bold;\r\n    position: relative;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    margin:auto;\r\n    display : flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    \r\n\r\n`","import React, {useState, useEffect} from 'react'\r\nimport {\r\n    HeaderUserContainer,\r\n    HeaderUser,\r\n    HeaderOptions,\r\n    HeaderUserName\r\n} from './UserDetails';\r\nimport {IoMdArrowDropdown} from 'react-icons/io';\r\nimport { Redirect } from 'react-router-dom';\r\nconst UserDetails = () => {\r\n    const [userSession, setUserSession] = useState(JSON.parse(localStorage.getItem(\"sessionUser\")) ? JSON.parse(localStorage.getItem(\"sessionUser\")) : []);\r\n    const [redirectMe, setRedirectMe] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        if(userSession.length === 0){\r\n            setRedirectMe(true);\r\n        }else{  \r\n            setRedirectMe(false);\r\n        }\r\n        \r\n        // eslint-disable-next-line \r\n    }, [userSession]);\r\n    \r\n    function handleLogout(){\r\n        console.log(redirectMe);\r\n        localStorage.removeItem(\"sessionUser\");\r\n        setRedirectMe(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {redirectMe && <Redirect to={\"/login\"} />}\r\n            <HeaderUserContainer>\r\n            {userSession.length > 0 && (\r\n                <HeaderUser>\r\n                        <HeaderUserName>\r\n                            Hi {userSession[0]['name']} \r\n                            <IoMdArrowDropdown/>\r\n                        </HeaderUserName>\r\n                        <HeaderOptions onClick={() => handleLogout()}>Logout</HeaderOptions>\r\n                </HeaderUser>\r\n                )}\r\n            </HeaderUserContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDetails\r\n","import React, {useEffect, useState} from 'react';\r\nimport UsersCard from '../UsersCard';\r\nimport {\r\n        UsersContainer,\r\n        UsersSearchContainer,\r\n        UsersFormTitle,\r\n        UsersFormInput,\r\n        UsersButton,\r\n        UsersListContainer,\r\n        UserDiv,\r\n        UsersError\r\n} from './UsersListElements'\r\nimport {IconContext} from 'react-icons';\r\nimport {IoMdSend} from 'react-icons/io';\r\nimport {FaSadTear} from 'react-icons/fa';\r\nimport {connect} from 'react-redux';\r\nimport {loadUsers, filterUsers} from '../../../redux/actions/userActions';\r\nimport PropTypes from 'prop-types';\r\nimport UserDetails from '../../commons';\r\n\r\nconst UsersList = ({loadUsers, filterUsers, users}) => {\r\n    \r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    // eslint-disable-next-line \r\n    \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if(users.length === 0){\r\n            loadUsers().catch(err => {\r\n                alert(`Loading users failed ${err}` );\r\n            })\r\n        }\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n\r\n    function handleInput(e){\r\n        const {value} = e.target;\r\n        if(value){\r\n            setSearchValue(value)\r\n        }else{\r\n            loadUsers();\r\n        }\r\n    }\r\n    \r\n    const handleSubmit = () => {\r\n        filterUsers(searchValue);\r\n    }   \r\n\r\n    return (\r\n        <>\r\n        \r\n        <UserDetails/>\r\n         <UsersContainer>\r\n            <UsersSearchContainer>\r\n                <UsersFormTitle>Have you <br/> seen?</UsersFormTitle>\r\n                <UserDiv>\r\n                    <UsersFormInput name=\"search\" autocomplete=\"off\" placeholder=\"type your name, email...\" onChange={(e) => handleInput(e)}/>\r\n                        <UsersButton onClick={() => handleSubmit()}>\r\n                        <IconContext.Provider value={{ style: {color: \"#FC724C\", display: \"flex\"} }}>\r\n                            <IoMdSend/>\r\n                        </IconContext.Provider>\r\n                    </UsersButton>\r\n                </UserDiv>\r\n            </UsersSearchContainer>\r\n        </UsersContainer>\r\n        <UsersListContainer>\r\n            {users.length === 0 && (<UsersError>We couldn't find HIM / HER <FaSadTear/> </UsersError>) }\r\n            <UsersCard users={users} />\r\n        </UsersListContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nUsersList.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    loadUsers: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps({users, sessions}) {\r\n    return {\r\n        users,\r\n        sessions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    filterUsers\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\r\n\r\n","import styleC from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n \r\nexport const UsersProfileContainer = styleC.div\r\n`\r\n    position:relative;\r\n    padding-top: 3rem;\r\n`\r\n\r\nexport const UsersProfileCard = styleC.div\r\n`\r\n    position: relative;\r\n    width: 50%;\r\n    height: 50%;\r\n    margin: 5rem auto;\r\n    background: #FFB174;\r\n    border-radius: 1.5rem;\r\n\r\n    @media screen and (max-width: 768px){\r\n        width: 80%;\r\n    }\r\n\r\n    @media screen and (max-width: 320px){\r\n        margin: 2rem auto;\r\n    }\r\n`\r\n\r\nexport const UsersProfileVector = styleC.div\r\n`\r\n    background: url('/images/top-vector.svg');\r\n    background-repeat: no-repeat;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 1.5rem 1.5rem 1.5rem 0;\r\n    position: absolute;\r\n\r\n    @media screen and (max-width: 411px){\r\n        height: 30%;\r\n        background-size: cover;\r\n    }\r\n\r\n    @media screen and (max-width: 320px){\r\n        height: 27%;\r\n        background-size: cover;\r\n    }\r\n`\r\n\r\nexport const UsersProfileImg = styleC.div\r\n`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: -5rem auto 0;\r\n    width: 110px;\r\n\r\n   \r\n\r\n    @media screen and (max-width: 320px){\r\n        width: 90px;\r\n    }\r\n`\r\n\r\nexport const Img = styleC.img\r\n`\r\n    width: 100%;\r\n`\r\nexport const UsersCloseIcon = styleC(Link)\r\n`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    margin-right: 1rem;\r\n    margin-top: 1rem;\r\n    font-size: 3rem;\r\n    text-decoration: none;\r\n    background: transparent;\r\n    cursor:pointer;\r\n    z-index: 10;\r\n    color: #FFF4E3;\r\n`\r\nexport const UsersProfileName = styleC.h1\r\n`\r\n    font-size: 3rem;\r\n    font-weight: 900;\r\n    opacity: 0.8;\r\n    // color: ${({titleColor}) => titleColor}\r\n    color: #FFF4E3;\r\n    margin-bottom: 5rem;\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 540px){\r\n        font-size: 2.5rem;\r\n        margin-bottom: 7rem;\r\n    }\r\n\r\n    @media screen and (max-width: 411px){\r\n        font-size: 2.5rem;\r\n        margin-bottom: 2rem;\r\n    }\r\n\r\n    @media screen and (max-width: 320px){\r\n        font-size: 2.5rem;\r\n        margin-bottom: 3rem;\r\n    }\r\n`\r\n\r\nexport const UsersProfileSendMessage = styleC(Link)\r\n`\r\n    position: absolute;\r\n    left: 0;\r\n    top: 50%;\r\n    margin: auto;    \r\n    transform: rotate(-90deg);    \r\n    font-size: 3.5rem;\r\n    font-weight: 900;\r\n    text-decoration: none;\r\n    cursor:pointer;\r\n    color: #FFF4E3;\r\n    line-height: 1;\r\n    transition: all 0.2s ease-in-out;\r\n\r\n    &:hover{\r\n        transform: scale(1.2) rotate(-90deg);\r\n    }\r\n\r\n    @media screen and (max-width: 1500px){\r\n        font-size: 2.5rem;\r\n        left: initial;\r\n        top: initial;\r\n        bottom: 0;\r\n        margin: 1rem;\r\n        transform: rotate(0);\r\n        transition: all 0.2s ease-in-out;\r\n        &:hover{\r\n            transform: scale(1.2) rotate(0) translateX(2rem);\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px){\r\n        font-size: 2.5rem;\r\n    }\r\n`\r\nexport const UsersProfileWrapper = styleC.div\r\n`\r\n    display: flex;\r\n    width: 100%;\r\n`\r\nexport const UsersProfileInfo = styleC.div\r\n`\r\n    margin: 10rem auto;\r\n    padding: 1rem;\r\n\r\n    @media screen and (max-width: 540px){\r\n        margin: 12rem auto;\r\n    }\r\n\r\n    @media screen and (max-width: 411px){\r\n        margin: 5rem auto;\r\n    }\r\n\r\n    @media screen and (max-width: 320px){\r\n        margin: 4rem auto;\r\n    }\r\n`\r\n\r\nexport const UsersProfileDiv = styleC.div\r\n`\r\n    display: flex;\r\n    padding: 1rem 2rem;\r\n    color: #5D5D5A;\r\n\r\n`\r\nexport const UsersProfileIcon = styleC.div\r\n`\r\n    font-size: 2rem;\r\n    margin-right: 1rem;\r\n`\r\n\r\nexport const UsersProfileContent = styleC.div\r\n`\r\n    font-size: 1.8rem;\r\n    font-weight: bold;\r\n`","import styleC from 'styled-components';\r\n\r\nexport const UsersChatWrapper = styleC.div\r\n`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    padding-top: 10rem;\r\n\r\n    @media screen and (max-width: 411px){\r\n        padding-top: 7rem;\r\n    }\r\n\r\n    @media screen and (max-width: 320px){\r\n        padding-top: 4rem;\r\n    }\r\n`\r\n\r\nexport const UsersChatContainer = styleC.div\r\n`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    height: 60vh;\r\n    padding: 3rem 2rem;\r\n    flex-flow: column;\r\n    \r\n`\r\n\r\nexport const UsersConversationDiv = styleC.div\r\n`\r\n    position: relative;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    overflow-y: scroll;\r\n`\r\n\r\nexport const UsersReceiverDiv = styleC.div\r\n`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: flex-star;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    \r\n`\r\n\r\nexport const UsersSenderDiv = styleC.div\r\n`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    margin-bottom: 1rem;\r\n    \r\n`\r\n\r\nexport const UsersAvatar = styleC.div\r\n`\r\n    width: 10%;\r\n    margin: ${({margin}) => margin};\r\n\r\n    @media screen and (max-width: 411px) {\r\n        width: 20%;\r\n    }\r\n`\r\nexport const Img = styleC.img\r\n`\r\n    width: 100%;\r\n`\r\n\r\nexport const UsersMessage = styleC.div\r\n`\r\n    font-size: 1.4rem;\r\n    font-weight: 500;\r\n    color: #FFF4E3;\r\n    max-width: 50%;\r\n    height: 100%;\r\n    background: #FA8B34;\r\n    padding: 1.5rem;\r\n    box-shadow: 4px 4px 12px rgba(0, 0, 0, 0.25);\r\n    border-radius: 1.5rem;\r\n    border-radius: 1rem;\r\n\r\n    @media screen and (max-width: 411px) {\r\n        max-width: 80%;\r\n    }\r\n`\r\nexport const UsersChatForm = styleC.form\r\n`\r\n    position: relative;\r\n    width: 70%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 1.5rem;\r\n    margin: 1rem auto 0;\r\n\r\n    @media screen and (max-width: 768px){\r\n        width: 100%;\r\n    }\r\n`\r\nexport const UsersChatSendButton = styleC.button\r\n`\r\n    color: #FC724C;\r\n    outline: none;\r\n    background: transparent;\r\n    white-space: nowrap;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 4rem;\r\n    margin-left: 0;\r\n    opacity: 0;\r\n    transform: scale(0.5) translateX(-7rem);\r\n    transition: all 0.2s ease-in-out;\r\n    display: flex;\r\n    z-index: 5;\r\n\r\n    &:hover{\r\n        transform: scale(1) translateX(0);\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\nexport const UsersChatInput = styleC.input\r\n`\r\n    border: solid #FC724C 1px;\r\n    padding: 2rem;\r\n    border-radius: 3rem;\r\n    color: #FC724C;\r\n    outline: none;\r\n    width: 100%;\r\n    z-index: 6;\r\n    \r\n    ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n        // color: ${({inputBoxColor}) => inputBoxColor};\r\n        color: #FC724C;\r\n        opacity: 0.5; /* Firefox */\r\n    }\r\n    \r\n    :-ms-input-placeholder { /* Internet Explorer 10-11 */\r\n        // color: ${({inputBoxColor}) => inputBoxColor};\r\n        color: #FC724C;\r\n    }\r\n    \r\n    ::-ms-input-placeholder { /* Microsoft Edge */\r\n        // color: ${({inputBoxColor}) => inputBoxColor};\r\n        color: #FC724C;\r\n    }\r\n\r\n    &:focus + ${UsersChatSendButton}{\r\n        transform: scale(1) translateX(0);\r\n        opacity: 1;\r\n    }\r\n`\r\n","import * as types from './actionTypes';\r\n\r\n\r\nexport function saveSession(sessions){\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: types.SAVE_SESSION,\r\n            sessions,\r\n        })\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {IoMdCloseCircleOutline, IoMdSend} from 'react-icons/io';\r\nimport {\r\n    UsersProfileContainer,\r\n    UsersProfileCard,\r\n    UsersProfileVector,\r\n    UsersProfileImg,\r\n    Img,\r\n    UsersCloseIcon,\r\n    UsersProfileName\r\n} from '../UsersProfile/UsersProfileElements';\r\nimport {\r\n    UsersChatContainer,\r\n    UsersConversationDiv,\r\n    UsersReceiverDiv,\r\n    UsersSenderDiv,\r\n    UsersAvatar,\r\n    UsersMessage,\r\n    UsersChatForm,\r\n    UsersChatWrapper,\r\n    UsersChatInput,\r\n    UsersChatSendButton\r\n} from './USersChatElements';\r\nimport UserDetails from '../../commons';\r\nimport PropTypes from 'prop-types';\r\nimport {loadUsers} from '../../../redux/actions/userActions';\r\nimport {createChats} from '../../../redux/actions/chatActions';\r\nimport {saveSession} from '../../../redux/actions/sessionActions';\r\nimport {connect} from 'react-redux';\r\nimport newUsers from '../../../api/mockData';\r\n\r\nconst UsersChat = ({loadUsers, createChats, saveSession, users, chats, sessions, ...props}) => {\r\n    const [user, setUser] = useState({...props.user})\r\n    const [chat, setChat] = useState({id: null, messages: \"\", teamMateId: null});\r\n    const userSession = JSON.parse(localStorage.getItem(\"sessionUser\")) ? JSON.parse(localStorage.getItem(\"sessionUser\")) : [];\r\n    const chatSession = JSON.parse(localStorage.getItem(\"chatSession\")) ? JSON.parse(localStorage.getItem(\"chatSession\")) : [];\r\n    useEffect(() => {\r\n        if(users.length === 0){\r\n            loadUsers().catch(err => {\r\n                alert(`Loading users failed ${err}` );\r\n            });\r\n        }else{\r\n            setUser({...props.user});\r\n        }\r\n\r\n        // eslint-disable-next-line \r\n    }, [props.user])\r\n\r\n    useEffect(() => {\r\n        if(chats.length === 0){\r\n            Object.values(chatSession).forEach(newValue=>{\r\n                    createChats(newValue);\r\n            });\r\n        }\r\n\r\n\r\n      // eslint-disable-next-line \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"chatSession\", JSON.stringify(chats));\r\n      // eslint-disable-next-line \r\n    }, [chats])\r\n\r\n    const handleChange = (e) =>{\r\n        // console.log();\r\n        setChat(prevChats => ({\r\n            ...prevChats,\r\n            id: parseInt(userSession[0][\"id\"]) , messages: e.target.value, teamMateId: user.id\r\n        }));\r\n\r\n    }\r\n\r\n    const onChatSave = (e) =>{\r\n        e.preventDefault();\r\n        createChats(chat);\r\n        e.target.reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <UserDetails/>\r\n        <UsersProfileContainer>\r\n            <UsersProfileCard>\r\n                <UsersProfileVector/>\r\n                <UsersProfileImg>\r\n                    <Img src={`/images/pic-${user.id}.png`} alt={`User${user.id}`} />\r\n                </UsersProfileImg>\r\n                <UsersCloseIcon to=\"/\"><IoMdCloseCircleOutline></IoMdCloseCircleOutline></UsersCloseIcon>\r\n                <UsersChatWrapper>\r\n                    <UsersProfileName>{user.name}</UsersProfileName>\r\n                    <UsersChatContainer>\r\n                        <UsersConversationDiv>\r\n                        \r\n                            {/* {chats.map((chat, keys) => (\r\n                                \r\n                                 chat.teamMateId === user.id && (\r\n                                    <UsersReceiverDiv key={keys}>\r\n                                    <UsersAvatar margin={\"0 1rem 0 0\"}>\r\n                                    <Img src={`/images/pic-${user.id}.png`}/>\r\n                                    </UsersAvatar>\r\n                                    <UsersMessage>{chat.messages}</UsersMessage>\r\n                                    </UsersReceiverDiv>\r\n                              )\r\n                            ))} */}\r\n\r\n                         \r\n                            \r\n                            {chats.map((chat, keys) => (\r\n                                 userSession[0][\"id\"] === chat.id && chat.teamMateId === user.id &&(\r\n                                    <UsersSenderDiv key={keys}>\r\n                                        <UsersMessage> {chat.messages} </UsersMessage>\r\n                                        <UsersAvatar margin={\"0 0 0 1rem\"}>\r\n                                        <Img src={`/images/pic-${chat.id}.png`}/>\r\n                                        </UsersAvatar>\r\n                                    </UsersSenderDiv>\r\n                              )\r\n                            ))}\r\n                           \r\n                        </UsersConversationDiv>\r\n                        <UsersChatForm onSubmit={(e) => onChatSave(e)}>\r\n                                <UsersChatInput name=\"chat\" autoComplete=\"off\" placeholder=\"Type your message here\" onChange={(e) => handleChange(e)}/>\r\n                                <UsersChatSendButton type=\"submit\"><IoMdSend/></UsersChatSendButton>\r\n                        </UsersChatForm>\r\n                    </UsersChatContainer>\r\n                </UsersChatWrapper>\r\n            </UsersProfileCard>\r\n        </UsersProfileContainer>\r\n        </>\r\n    )\r\n}\r\nUsersChat.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n    chats: PropTypes.array.isRequired,\r\n    sessions: PropTypes.array.isRequired,\r\n    loadUsers: PropTypes.func.isRequired,\r\n    createChats: PropTypes.func.isRequired\r\n}\r\n\r\nexport function getUsersParams(users, paramsId){\r\n    return users.find(user => user.id === parseInt(paramsId)) || null;\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const paramsId = ownProps.match.params.paramsId;\r\n    const user = paramsId && state.users.length > 0 ? getUsersParams(state.users, paramsId) : newUsers\r\n    return {\r\n        user,\r\n        users : state.users,\r\n        chats : state.chats,\r\n        sessions: state.sessions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    createChats,\r\n    saveSession\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersChat);\r\n","import * as types from './actionTypes';\r\n\r\nexport function createChats(chats){\r\n    return function(dispatch){\r\n        dispatch({\r\n            type: types.SAVE_CHATS, \r\n            chats\r\n        })\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {MdEmail, MdPhoneIphone, MdLocationOn} from 'react-icons/md';\r\nimport {FaGlobeAsia, FaRegBuilding} from 'react-icons/fa'\r\nimport {IoMdCloseCircleOutline} from 'react-icons/io';\r\nimport {\r\n        UsersProfileContainer,\r\n        UsersProfileCard,\r\n        UsersProfileVector,\r\n        UsersProfileImg,\r\n        Img,\r\n        UsersCloseIcon,\r\n        UsersProfileName,\r\n        UsersProfileSendMessage,\r\n        UsersProfileWrapper,\r\n        UsersProfileInfo,\r\n        UsersProfileDiv,\r\n        UsersProfileIcon,\r\n        UsersProfileContent\r\n} from './UsersProfileElements'\r\nimport UserDetails from '../../commons';\r\nimport PropTypes from 'prop-types';\r\nimport {loadUsers} from '../../../redux/actions/userActions';\r\nimport {connect} from 'react-redux';\r\nimport newUsers from '../../../api/mockData';\r\n\r\n\r\nconst UsersProfile = ({loadUsers, users, ...props}) => {\r\n\r\n    const [user, setUser] = useState({...props.user})\r\n    useEffect(() => {\r\n        if(users.length === 0){\r\n            loadUsers().catch(err => {\r\n                alert(`Loading users failed ${err}` );\r\n            });\r\n        }else{\r\n            setUser({...props.user});\r\n        }\r\n      // eslint-disable-next-line \r\n    }, [props.user])\r\n    \r\n    return (\r\n        <>\r\n        <UserDetails/>\r\n        <UsersProfileContainer>\r\n            <UsersProfileCard key={user.id}>\r\n                <UsersProfileVector/>\r\n                <UsersProfileImg>\r\n                    <Img src={`/images/pic-${user.id}.png`} alt={`User${user.id}`} />\r\n                </UsersProfileImg>\r\n                <UsersCloseIcon to=\"/\"><IoMdCloseCircleOutline/></UsersCloseIcon>\r\n                        <UsersProfileSendMessage to={\"/chat/\" + user.id} >\r\n                            Message <br/> {user.username}\r\n                        </UsersProfileSendMessage>\r\n                <UsersProfileWrapper>\r\n                    <UsersProfileInfo>\r\n                    <UsersProfileName>{user.name}</UsersProfileName>\r\n                        <UsersProfileDiv>\r\n                            <UsersProfileIcon><MdEmail/></UsersProfileIcon>\r\n                            <UsersProfileContent>{user.email}</UsersProfileContent>\r\n                        </UsersProfileDiv>\r\n                        <UsersProfileDiv>\r\n                            <UsersProfileIcon><MdPhoneIphone/></UsersProfileIcon>\r\n                            <UsersProfileContent>{user.phone}</UsersProfileContent>\r\n                        </UsersProfileDiv>\r\n                        <UsersProfileDiv>\r\n                            <UsersProfileIcon><MdLocationOn/></UsersProfileIcon>\r\n                            <UsersProfileContent>\r\n                            {user.address && (\r\n                                <>\r\n                                    {user.address.street} <br/>\r\n                                    {user.address.suite} <br/>\r\n                                    {user.address.city} <br/>\r\n                                    {user.address.zipcode} <br/>\r\n                                </>\r\n                            )}\r\n                            </UsersProfileContent>\r\n                        </UsersProfileDiv>\r\n                        <UsersProfileDiv>\r\n                            <UsersProfileIcon><FaGlobeAsia/></UsersProfileIcon>\r\n                            <UsersProfileContent>{user.email}</UsersProfileContent>\r\n                        </UsersProfileDiv>\r\n                        <UsersProfileDiv>\r\n                            <UsersProfileIcon><FaRegBuilding/></UsersProfileIcon>\r\n                            <UsersProfileContent>\r\n                            {user.company && (\r\n                                <>\r\n                                    {user.company.name}\r\n                                </>\r\n                            )}\r\n                            </UsersProfileContent>\r\n                        </UsersProfileDiv>\r\n                    </UsersProfileInfo>\r\n                </UsersProfileWrapper>\r\n            </UsersProfileCard>\r\n        </UsersProfileContainer>\r\n    </>  \r\n    )\r\n}\r\n\r\nUsersProfile.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    users: PropTypes.array.isRequired,\r\n    loadUsers: PropTypes.func.isRequired\r\n}\r\n\r\nexport function getUsersParams(users, paramsId){\r\n    return users.find(user => user.id === parseInt(paramsId)) || null;\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const paramsId = ownProps.match.params.paramsId;\r\n    const user = paramsId && state.users.length > 0 ? getUsersParams(state.users, paramsId) : newUsers\r\n    return {\r\n        user,\r\n        users : state.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersProfile);\r\n","import styleC from 'styled-components';\r\n\r\nexport const ModalContainer = styleC.div\r\n`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0,0,0,0.5);\r\n    z-index: 100;\r\n`\r\n\r\nexport const ModalContent = styleC.div\r\n`\r\n    width: 100%;\r\n    height: 100vh;\r\n    display : flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    z-index: 100;\r\n    background: #fff;\r\n    padding: 0 1.6rem;\r\n\r\n    @media screen and (max-width: 570px){\r\n        flex-direction: column;\r\n    }\r\n`\r\nexport const ModalTitle = styleC.h1\r\n`\r\n    font-size: 3.6rem;\r\n    color: #FC724C;\r\n    margin-bottom: 1rem;\r\n`\r\n\r\nexport const ModalInput = styleC.input\r\n`\r\n    // border: solid ${({inputBoxColor}) => inputBoxColor} 1px;\r\n    border: solid #FC724C 1px;\r\n    padding: 2rem;\r\n    border-radius: 3rem;\r\n    // color: ${({inputBoxColor}) => inputBoxColor};\r\n    color: #FC724C;\r\n    outline: none;\r\n\r\n    ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\r\n        // color: ${({inputBoxColor}) => inputBoxColor};\r\n        color: #FC724C;\r\n        opacity: 0.5; /* Firefox */\r\n    }\r\n\r\n    :-ms-input-placeholder { /* Internet Explorer 10-11 */\r\n        // color: ${({inputBoxColor}) => inputBoxColor};\r\n        color: #FC724C;\r\n    }\r\n\r\n    ::-ms-input-placeholder { /* Microsoft Edge */\r\n        // color: ${({inputBoxColor}) => inputBoxColor};\r\n        color: #FC724C;\r\n    }\r\n`\r\nexport const ModalButton = styleC.button\r\n`\r\n    // color: ${({inputBoxColor}) => inputBoxColor};\r\n    color: #FC724C;\r\n    outline: none;\r\n    background: transparent;\r\n    white-space: nowrap;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 4rem;\r\n    margin-left: 0;\r\n    z-index: 999;\r\n    display: flex;\r\n\r\n   \r\n`\r\n\r\nexport const ModalError = styleC.div\r\n`\r\n    display: flex;\r\n    align-items:center;\r\n    justity-content: center;\r\n    color : #FF0013;\r\n    opacity: 0.8;\r\n    font-size: 2.6rem;\r\n    margin-top: 2rem;\r\n`","import React, {useState, useEffect} from 'react'\r\nimport {IoMdSend} from 'react-icons/io';\r\nimport {FaSadTear} from 'react-icons/fa';\r\nimport {\r\n        ModalContainer,\r\n        ModalContent,\r\n        ModalTitle,\r\n        ModalInput,\r\n        ModalButton,\r\n        ModalError\r\n} from './LoginElements';\r\nimport {UserDiv} from '../Users/UsersList/UsersListElements';\r\nimport {connect} from 'react-redux';\r\nimport {loadUsers} from '../../redux/actions/userActions';\r\nimport {saveSession} from '../../redux/actions/sessionActions';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nconst LoginPage = ({users, loadUsers, saveSession, optionsState}) => {\r\n\r\n    const [userSession, setUserSession] = useState(\"\");\r\n    const [showError, setShowError] = useState(false);\r\n    const [redirectMe, setRedirectMe] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        if(users.length === 0){\r\n            loadUsers().catch(err => {\r\n                alert(`Loading users failed ${err}` );\r\n            })\r\n        }\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    function handleSession(e){\r\n        const {value} = e.target;\r\n        if(value){\r\n            setUserSession(value)\r\n        }\r\n        if(value === \"\"){\r\n            setShowError(false);\r\n        }\r\n    }\r\n\r\n    \r\n    const handleSubmit = () => {\r\n        let filterSession = users.filter(filterUsername => \r\n            filterUsername.username.toLowerCase().includes(userSession.toLowerCase())\r\n       )\r\n\r\n        if(filterSession.length === 0){\r\n            setShowError(true)\r\n        }else{\r\n            saveSession(filterSession);\r\n            localStorage.setItem(\"sessionUser\", JSON.stringify(filterSession));\r\n            setShowError(false);\r\n            setRedirectMe(true)\r\n        } \r\n        \r\n        \r\n    }   \r\n\r\n    return (\r\n        <>\r\n            {redirectMe && (<Redirect to={\"/\"} />)}\r\n            <ModalContainer>\r\n                <ModalContent>\r\n                    <ModalTitle>Who are you?</ModalTitle>\r\n                    <UserDiv>\r\n                        <ModalInput placeholder=\"Type your username...\" onChange={(e) => handleSession(e)}/>\r\n                        <ModalButton onClick={() => handleSubmit()}><IoMdSend/></ModalButton>\r\n                    </UserDiv>\r\n                        {showError && (<ModalError>We couldn't your username  <FaSadTear/> </ModalError>) }\r\n                </ModalContent>\r\n            </ModalContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nLoginPage.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    sessions: PropTypes.array.isRequired,\r\n    loadUsers: PropTypes.func.isRequired,\r\n    saveSession: PropTypes.func.isRequired,\r\n}\r\n\r\nfunction mapStateToProps({users, sessions,options}) {\r\n    return {\r\n        users,\r\n        sessions\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers,\r\n    saveSession,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import { combineReducers } from 'redux';\r\nimport users from './userReducer';\r\nimport sessions from './sessionReducer';\r\nimport chats from './chatReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    users,\r\n    sessions,\r\n    chats\r\n});\r\n\r\nexport default rootReducer;","import * as types from '../actions/actionTypes';\r\n\r\nexport default function userReducer(state = [], action){\r\n    switch(action.type){\r\n        case types.LOAD_USERS_SUCCESS :\r\n            return action.users;\r\n        case types.LOAD_FILTERED_USERS_SUCCESS :\r\n            let filteredState = [\r\n                ...state.filter(item => {\r\n                    return Object.keys(item).some(key =>\r\n                        item[key].toString().toLowerCase().includes(action.searchValue.toLowerCase())\r\n                    );\r\n                    }) \r\n            ]\r\n            return filteredState;\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as types from '../actions/actionTypes';\r\n\r\nexport default function sessionReducer(state = [], action){\r\n    switch(action.type){\r\n        case types.SAVE_SESSION :\r\n               return action.sessions\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as types from '../actions/actionTypes';\r\n\r\nexport default function chatReducer(state = [], action){\r\n    switch(action.type){\r\n        case types.SAVE_CHATS :\r\n            return [...state, {...action.chats}];\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n// import { defaultTheme } from './api/stylesApi';\n// import { useAxiosGetUser } from './api/userApi'\nimport Header from './components/Header';\nimport UsersList from './components/Users/UsersList';\nimport UsersChat from './components/Users/UsersChat';\nimport UsersProfile from './components/Users/UsersProfile';\nimport LoginPage from './components/Login';\nimport configureStore from './redux/configureStore';\nimport {Provider as ReduxProvider} from 'react-redux';\n\nconst store = configureStore();\n\nconst App = () =>  {\n  return (\n    <ReduxProvider store={store}>\n      <Router>\n      <Header exact component={Header}/>\n        <Switch>\n          <Route exact path=\"/login\" component={LoginPage}/> \n          <Route exact path=\"/\" component={UsersList}/>\n          <Route exact path=\"/profile/:paramsId\" component={UsersProfile}/>\n          <Route exact path=\"/chat/:paramsId\" component={UsersChat}/>\n        </Switch>\n      </Router>\n    </ReduxProvider>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default function configureStore(initialState){\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    return createStore(\r\n        rootReducer, \r\n        initialState, \r\n        composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}